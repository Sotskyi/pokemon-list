{"version":3,"sources":["utils/bem.js","utils/types-color.js","components/pokemon-modal/pokemon-modal.js","components/pokemon-card/pokemon-card.js","components/select/select.js","App.js","reportWebVitals.js","index.js"],"names":["BemPrefix","className","classNamePrefix","join","typeColors","bug","dragon","fairy","fire","ghost","ground","normal","pyschic","steel","dark","electric","fighting","flying","grass","ice","poison","rock","water","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","TransitionsModal","pokemon","classes","React","useState","open","setOpen","onClick","src","sprites","front_default","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","id","base_experience","stats","base_stat","bem","PokemonCard","clickOnType","types","map","elem","i","style","typeColor","type","name","weight","height","button","marginTop","formControl","margin","minWidth","ControlledOpenSelect","setPokemonPerPage","item","setItem","FormControl","InputLabel","Select","labelId","onOpen","value","onChange","event","target","MenuItem","App","pokemonData","setPokemonData","copyPokemonData","setCopyPokemonData","loading","setLoading","pokemonPerPage","searchTerm","setSearchTerm","searchByTypes","setSearchByTypes","useEffect","a","fetch","fetchData","json","response","getAdditionalInfromation","results","allPokemonData","getPokemonData","data","Promise","all","url","length","filter","includes","toLowerCase","lentgh","pokemonTypes","indexOf","e","deleteType","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5d821d6.chunk.js","sourcesContent":["export const BemPrefix = (className) => (classNamePrefix) => {\r\n  if (!classNamePrefix) {\r\n    return className;\r\n  }\r\n  return [className, classNamePrefix].join(\"__\");\r\n};\r\n","const typeColors = {\r\n  bug: \"#729f3f\",\r\n  dragon: \"#53a4cf\",\r\n  fairy: \"#fdb9e9\",\r\n  fire: \"#fd7d24\",\r\n  ghost: \"#7b62a3\",\r\n  ground: \"#f7de3f\",\r\n  normal: \"#a4acaf\",\r\n  pyschic: \"#f366b9\",\r\n  steel: \"#9eb7b\",\r\n  dark: \"#707070\",\r\n  electric: \"#eed535\",\r\n  fighting: \"#d56723\",\r\n  flying: \"#3dc7ef\",\r\n  grass: \"#9bcc50\",\r\n  ice: \"#51c4e7\",\r\n  poison: \"#b97fc9\",\r\n  rock: \"#a38c21\",\r\n  water: \"#4592c4\",\r\n};\r\n\r\nexport default typeColors;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport \"./pokemon-modal.scss\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport const TransitionsModal = ({ pokemon }) => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"open-modal\">\r\n      <img\r\n        onClick={handleOpen}\r\n        className=\"img\"\r\n        src={pokemon.sprites.front_default}\r\n      ></img>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <p>Pokemon base experience</p>\r\n            <p id=\"transition-modal-title\">{pokemon.base_experience}</p>\r\n            <p>Pokemon base stat</p>\r\n            <p id=\"transition-modal-description\">\r\n              {pokemon.stats[0].base_stat}\r\n            </p>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { BemPrefix } from \"../../utils/bem\";\r\nimport typeColor from \"../../utils/types-color\";\r\nimport { TransitionsModal } from \"../pokemon-modal/pokemon-modal\";\r\nimport \"./pokemon-card.scss\";\r\n\r\nconst bem = BemPrefix(\"pokemon-card\");\r\n\r\nexport const PokemonCard = ({ pokemon, clickOnType }) => {\r\n  return (\r\n    <div className={bem()}>\r\n      <div className={bem(\"avatar-container\")}>\r\n        <TransitionsModal pokemon={pokemon}> </TransitionsModal>\r\n        <div className={bem(\"avatar-container__types-wrapper\")}>\r\n          {pokemon.types.map((elem, i) => (\r\n            <div\r\n              onClick={clickOnType}\r\n              style={{ backgroundColor: typeColor[elem.type.name] }}\r\n              key={i}\r\n              id={elem.type.name}\r\n              className={bem(\"avatar-container__types-wrapper__type\")}\r\n            >\r\n              {elem.type.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className={bem(\"name\")}>{pokemon.name} </div>\r\n      <div className={bem(\"pokemon-stats\")}>\r\n        <div className={bem(\"pokemon-stats__weight\")}>\r\n          <p>Weight</p>\r\n          <p>{pokemon.weight}</p>\r\n        </div>\r\n        <div className={bem(\"pokemon-stats__height\")}>\r\n          <p>Height</p>\r\n          <p>{pokemon.height}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { BemPrefix } from \"../../utils/bem\";\r\n\r\nimport \"./select.scss\";\r\n\r\nconst bem = BemPrefix(\"select\");\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    display: \"block\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 10,\r\n  },\r\n}));\r\n\r\nexport function ControlledOpenSelect({ setPokemonPerPage }) {\r\n  const classes = useStyles();\r\n  const [item, setItem] = React.useState(\"10\");\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    setItem(event.target.value);\r\n    setPokemonPerPage(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div className={bem()}>\r\n      <FormControl className={classes.formControl}>\r\n        Pokemons per page\r\n        <InputLabel id=\"demo-controlled-open-select-label\"></InputLabel>\r\n        <Select\r\n          labelId=\"demo-controlled-open-select-label\"\r\n          id=\"demo-controlled-open-select\"\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          value={item}\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={50}>Fifty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { PokemonCard } from \"./components/pokemon-card\";\r\nimport { BemPrefix } from \"./utils/bem\";\r\nimport { ControlledOpenSelect } from \"./components/select/\";\r\nimport typeColor from \"./utils/types-color\";\r\n\r\nimport \"./App.scss\";\r\n\r\nconst bem = BemPrefix(\"App\");\r\n\r\nfunction App() {\r\n  const [pokemonData, setPokemonData] = useState([]);\r\n  const [copyPokemonData, setCopyPokemonData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [pokemonPerPage, setPokemonPerPage] = useState(10);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchByTypes, setSearchByTypes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getPokemonData = async () => {\r\n      setLoading(true);\r\n\r\n      let fetchData = await fetch(\r\n        `https://pokeapi.co/api/v2/pokemon?limit=${pokemonPerPage}`\r\n      );\r\n\r\n      let response = await fetchData.json();\r\n      let allPokemonData = await getAdditionalInfromation(response.results);\r\n\r\n      setPokemonData(allPokemonData);\r\n      setCopyPokemonData(allPokemonData);\r\n      setLoading(false);\r\n    };\r\n\r\n    getPokemonData();\r\n  }, [pokemonPerPage]);\r\n\r\n  const getAdditionalInfromation = async (data) => {\r\n    return Promise.all(\r\n      data.map(async (pokemon) => {\r\n        let response = await fetch(pokemon.url);\r\n\r\n        return response.json();\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchTerm.length === 0 && searchByTypes.length > 0) {\r\n      return;\r\n    } else if (searchTerm.length === 0 && searchByTypes.length === 0) {\r\n      setPokemonData(copyPokemonData);\r\n    } else if (searchTerm.length > 0) {\r\n      const results = copyPokemonData.filter((pokemon) =>\r\n        pokemon.name.includes(searchTerm.toLowerCase())\r\n      );\r\n\r\n      setPokemonData(results);\r\n    } else return;\r\n  }, [searchTerm]);\r\n\r\n  useEffect(() => {\r\n    if (searchByTypes.lentgh === 0 && searchTerm.length > 0) {\r\n      return;\r\n    } else if (searchTerm.length === 0 && searchByTypes.length === 0) {\r\n      setPokemonData(copyPokemonData);\r\n    } else if (searchByTypes.length > 0) {\r\n      const containsAny = (source, target) => {\r\n        let result = source.filter(function (item) {\r\n          return target.indexOf(item) > -1;\r\n        });\r\n\r\n        return result.length > 0;\r\n      };\r\n\r\n      const results = copyPokemonData.filter((pokemon) => {\r\n        const pokemonTypes = pokemon.types.map((elem) => elem.type.name);\r\n\r\n        return containsAny(pokemonTypes, searchByTypes);\r\n      });\r\n\r\n      setPokemonData(results);\r\n    } else return;\r\n  }, [searchByTypes]);\r\n\r\n  const handleSearchInput = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const clickOnType = (e) => {\r\n    if (searchByTypes.includes(e.target.id)) {\r\n      return;\r\n    }\r\n    setSearchByTypes([...searchByTypes, e.target.id]);\r\n  };\r\n\r\n  const deleteType = (e) => {\r\n    const results = searchByTypes.filter((type) => type !== e.target.id);\r\n    setSearchByTypes(results);\r\n  };\r\n\r\n  return (\r\n    <div className={bem()}>\r\n      <div className={bem(\"nav-bar\")}>\r\n        <input\r\n          onChange={handleSearchInput}\r\n          value={searchTerm}\r\n          placeholder={\"search by name\"}\r\n          className={bem(\"input\")}\r\n        ></input>\r\n        <ControlledOpenSelect\r\n          setPokemonPerPage={setPokemonPerPage}\r\n          setSearchTerm={setSearchTerm}\r\n          setSearchByTypes={setSearchByTypes}\r\n        />\r\n        <div className={bem(\"search-by-types\")}>\r\n          click on types for search by type\r\n          {searchByTypes.map((elem, i) => (\r\n            <span\r\n              onClick={deleteType}\r\n              style={{ backgroundColor: typeColor[elem] }}\r\n              id={elem}\r\n              key={i}\r\n            >\r\n              {elem}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {loading ? (\r\n        <h1>Loading...</h1>\r\n      ) : (\r\n        <>\r\n          {pokemonData.map((pokemon) => {\r\n            return (\r\n              <PokemonCard\r\n                clickOnType={clickOnType}\r\n                key={pokemon.name}\r\n                pokemon={pokemon}\r\n              />\r\n            );\r\n          })}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <App />,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}